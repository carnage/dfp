<?php
/**
 * Test class for Dfp_Datafeed_Transfer
 * Generated by PHPUnit on 2011-12-09 at 10:59:43.
 *
 */
class Dfp_Datafeed_Transfer_Adapter_AbstractTest extends PHPUnit_Framework_TestCase
{
    public function testSetConfig()
    {
        $config = new Zend_Config(array('setting'=>'value'));
        $sut = $this->getMockForAbstractClass('Dfp_Datafeed_Transfer_Adapter_Abstract');
        $sut->expects($this->once())->method('setOptions')->with($this->equalTo(array('setting'=>'value')));
        $sut->setConfig($config);
    }
    
    public function testAddError()
    {
        $sut = $this->getMockForAbstractClass('Dfp_Datafeed_Transfer_Adapter_Abstract');
        $sut->addError('123');
        $this->assertTrue($sut->hasErrors());
        $this->assertEquals(array('123'), $sut->getErrors());
    }
    
    public function testAddErrors()
    {
        $sut = $this->getMockForAbstractClass('Dfp_Datafeed_Transfer_Adapter_Abstract');
        $sut->addErrors(array('123','456'));
    
        $this->assertTrue($sut->hasErrors());
        $this->assertEquals(array('123','456'), $sut->getErrors());
    }
    
    public function testGetErrors()
    {
        $sut = $this->getMockForAbstractClass('Dfp_Datafeed_Transfer_Adapter_Abstract');
    
        $this->assertEmpty($sut->getErrors());
    }
    
    public function testHasErrors()
    {
        $sut = $this->getMockForAbstractClass('Dfp_Datafeed_Transfer_Adapter_Abstract');
    
        $this->assertFalse($sut->hasErrors());
    }
    
    public function testSetErrors()
    {
        $sut = $this->getMockForAbstractClass('Dfp_Datafeed_Transfer_Adapter_Abstract');
        $sut->addErrors(array('123','456'));
    
        $sut->setErrors(array('789'));
    
        $this->assertEquals(array('789'), $sut->getErrors());
    }    
}